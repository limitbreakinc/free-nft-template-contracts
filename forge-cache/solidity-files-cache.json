{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/creator-token-contracts/contracts/access/OwnableBasic.sol": {
      "lastModificationDate": 1683932229840,
      "contentHash": "53be2389387c146dd93eb17efa0169be",
      "sourceName": "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "OwnableBasic": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "OwnableBasic.sol/OwnableBasic.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol": {
      "lastModificationDate": 1683932229840,
      "contentHash": "1585bb9ba73fb60caa1e8cfd8acdf059",
      "sourceName": "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "OwnableInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "OwnableInitializable.sol/OwnableInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol": {
      "lastModificationDate": 1683932229841,
      "contentHash": "bd40508a9276db78c53878c707ba2754",
      "sourceName": "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "OwnablePermissions": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "OwnablePermissions.sol/OwnablePermissions.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol": {
      "lastModificationDate": 1683932229841,
      "contentHash": "1149111bd85dd3c9604f8094de144f4e",
      "sourceName": "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "AdventureBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721.sol/AdventureBase.json"
        },
        "AdventureERC721": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721.sol/AdventureERC721.json"
        },
        "AdventureERC721Initializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721.sol/AdventureERC721Initializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol": {
      "lastModificationDate": 1683932229841,
      "contentHash": "8f8e3432eff4b77bd5713db1d32a0b7b",
      "sourceName": "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "AdventureWhitelist": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureWhitelist.sol/AdventureWhitelist.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/adventures/IAdventure.sol": {
      "lastModificationDate": 1683932229841,
      "contentHash": "7a5dc012fa4a3c0defb694c1961cff82",
      "sourceName": "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IAdventure": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IAdventure.sol/IAdventure.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol": {
      "lastModificationDate": 1683932229841,
      "contentHash": "c02a2ce685997853f65369e78335fcf7",
      "sourceName": "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IAdventurous": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IAdventurous.sol/IAdventurous.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/adventures/Quest.sol": {
      "lastModificationDate": 1683932229841,
      "contentHash": "2a9e703a423d68a0cac408376bc75d57",
      "sourceName": "lib/creator-token-contracts/contracts/adventures/Quest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "Quest": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Quest.sol/Quest.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol": {
      "lastModificationDate": 1683932229842,
      "contentHash": "b99f1818285d9e2bdef1a3472b577227",
      "sourceName": "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "AdventureERC721C": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721C.sol/AdventureERC721C.json"
        },
        "AdventureERC721CInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721C.sol/AdventureERC721CInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol": {
      "lastModificationDate": 1683932229842,
      "contentHash": "3e6f70c74d1c2af64a989dba6f2c1723",
      "sourceName": "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ERC721C": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721C.sol/ERC721C.json"
        },
        "ERC721CInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721C.sol/ERC721CInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol": {
      "lastModificationDate": 1683932229845,
      "contentHash": "537f656132a3b98412b1ab41fc24555a",
      "sourceName": "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ICreatorToken": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ICreatorToken.sol/ICreatorToken.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol": {
      "lastModificationDate": 1683932229845,
      "contentHash": "23c5cdcccebd14f499e1ad85531093fb",
      "sourceName": "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ICreatorTokenTransferValidator": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ICreatorTokenTransferValidator.sol/ICreatorTokenTransferValidator.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol": {
      "lastModificationDate": 1683932229846,
      "contentHash": "51191e8633571dddbd872c1f6b2f2d7e",
      "sourceName": "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IEOARegistry": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IEOARegistry.sol/IEOARegistry.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol": {
      "lastModificationDate": 1683932229846,
      "contentHash": "8e888409701df6e255c8691adba9d5ab",
      "sourceName": "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ITransferSecurityRegistry": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ITransferSecurityRegistry.sol/ITransferSecurityRegistry.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol": {
      "lastModificationDate": 1683932229846,
      "contentHash": "3f5d83efc52a4ce98cde7c8e2dd9eccf",
      "sourceName": "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ITransferValidator": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ITransferValidator.sol/ITransferValidator.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/minting/AirdropMint.sol": {
      "lastModificationDate": 1683932229846,
      "contentHash": "da84bb6b98465ddb68b39a42589a8e0f",
      "sourceName": "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "AirdropMint": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AirdropMint.sol/AirdropMint.json"
        },
        "AirdropMintBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AirdropMint.sol/AirdropMintBase.json"
        },
        "AirdropMintInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AirdropMint.sol/AirdropMintInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol": {
      "lastModificationDate": 1683932229846,
      "contentHash": "f0c0e842a48d4a59d1360fee4e4082f7",
      "sourceName": "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ClaimPeriodBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ClaimPeriodBase.sol/ClaimPeriodBase.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/minting/MaxSupply.sol": {
      "lastModificationDate": 1683932229847,
      "contentHash": "aa6d7ba38761c0e6a06f47cd4938d2ec",
      "sourceName": "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MaxSupply": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MaxSupply.sol/MaxSupply.json"
        },
        "MaxSupplyBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MaxSupply.sol/MaxSupplyBase.json"
        },
        "MaxSupplyInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MaxSupply.sol/MaxSupplyInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol": {
      "lastModificationDate": 1683932229847,
      "contentHash": "2ec943b93460760143a49bf9ff2a02f6",
      "sourceName": "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MerkleWhitelistMint": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MerkleWhitelistMint.sol/MerkleWhitelistMint.json"
        },
        "MerkleWhitelistMintBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MerkleWhitelistMint.sol/MerkleWhitelistMintBase.json"
        },
        "MerkleWhitelistMintInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MerkleWhitelistMint.sol/MerkleWhitelistMintInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol": {
      "lastModificationDate": 1683932229847,
      "contentHash": "021a9cf6507eba7ea17f0d2414c8a0af",
      "sourceName": "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MintTokenBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MintTokenBase.sol/MintTokenBase.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol": {
      "lastModificationDate": 1683932229847,
      "contentHash": "d29f3352c0089302dfc03ffe4ba02716",
      "sourceName": "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "SequentialMintBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "SequentialMintBase.sol/SequentialMintBase.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol": {
      "lastModificationDate": 1683932229847,
      "contentHash": "e09a7e171146e4ffc38358cea556de73",
      "sourceName": "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "BasicRoyalties.sol/BasicRoyalties.json"
        },
        "BasicRoyaltiesBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "BasicRoyalties.sol/BasicRoyaltiesBase.json"
        },
        "BasicRoyaltiesInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "BasicRoyalties.sol/BasicRoyaltiesInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol": {
      "lastModificationDate": 1683932229847,
      "contentHash": "184166355fda2d9b193d15a0420855f9",
      "sourceName": "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ImmutableMinterRoyalties.sol/ImmutableMinterRoyalties.json"
        },
        "ImmutableMinterRoyaltiesBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ImmutableMinterRoyalties.sol/ImmutableMinterRoyaltiesBase.json"
        },
        "ImmutableMinterRoyaltiesInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ImmutableMinterRoyalties.sol/ImmutableMinterRoyaltiesInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol": {
      "lastModificationDate": 1684172442943,
      "contentHash": "85e892db910f88f9ac8187d543a0142d",
      "sourceName": "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MinterCreatorSharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MinterCreatorSharedRoyalties.sol/MinterCreatorSharedRoyalties.json"
        },
        "MinterCreatorSharedRoyaltiesBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MinterCreatorSharedRoyalties.sol/MinterCreatorSharedRoyaltiesBase.json"
        },
        "MinterCreatorSharedRoyaltiesInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MinterCreatorSharedRoyalties.sol/MinterCreatorSharedRoyaltiesInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol": {
      "lastModificationDate": 1683932229848,
      "contentHash": "9b264d27f4d8c288e95ad084dfbf1cff",
      "sourceName": "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MutableMinterRoyalties.sol/MutableMinterRoyalties.json"
        },
        "MutableMinterRoyaltiesBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MutableMinterRoyalties.sol/MutableMinterRoyaltiesBase.json"
        },
        "MutableMinterRoyaltiesInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MutableMinterRoyalties.sol/MutableMinterRoyaltiesInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol": {
      "lastModificationDate": 1684172442943,
      "contentHash": "193567d00d8e8774a3ef3970b5bc21f9",
      "sourceName": "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IPaymentSplitterInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IPaymentSplitterInitializable.sol/IPaymentSplitterInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol": {
      "lastModificationDate": 1683932229848,
      "contentHash": "3f6d8d08d51395118a4456aa76e1090b",
      "sourceName": "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ERC721OpenZeppelin": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721OpenZeppelin.sol/ERC721OpenZeppelin.json"
        },
        "ERC721OpenZeppelinBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721OpenZeppelin.sol/ERC721OpenZeppelinBase.json"
        },
        "ERC721OpenZeppelinInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721OpenZeppelin.sol/ERC721OpenZeppelinInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol": {
      "lastModificationDate": 1683932229849,
      "contentHash": "2971d2ef95094299bf2c027a8b4e6f69",
      "sourceName": "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MetadataURI": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MetadataURI.sol/MetadataURI.json"
        },
        "MetadataURIInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MetadataURI.sol/MetadataURIInitializable.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol": {
      "lastModificationDate": 1683932229849,
      "contentHash": "d7a0e47d5f639a76ad2bdd5787821e72",
      "sourceName": "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "CreatorTokenBase": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "CreatorTokenBase.sol/CreatorTokenBase.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol": {
      "lastModificationDate": 1683932229849,
      "contentHash": "dffcd7c15217d3629af6ecafb3c3d137",
      "sourceName": "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "TransferPolicy": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "TransferPolicy.sol/TransferPolicy.json"
        }
      }
    },
    "lib/creator-token-contracts/contracts/utils/TransferValidation.sol": {
      "lastModificationDate": 1683932229849,
      "contentHash": "83f3bba3686cd50ef604b9cf25fdd02f",
      "sourceName": "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "TransferValidation": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "TransferValidation.sol/TransferValidation.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1683932367458,
      "contentHash": "6700fcb5decd824189c59095d47a3588",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
      "lastModificationDate": 1683932367463,
      "contentHash": "ee9624272968c23d93d4c2e39f06e6e2",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
      "lastModificationDate": 1683932367464,
      "contentHash": "7daf4f3c28c1cafa96a1f61c603c44d8",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC2981": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC2981.sol/IERC2981.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
      "lastModificationDate": 1683932367474,
      "contentHash": "619ebe6b259dbac8eddc7df5a8a380c1",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Clones": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Clones.sol/Clones.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1683932367478,
      "contentHash": "d3f395dc838796643e7a71419900ab23",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1683932367481,
      "contentHash": "88253fc2179bd7093177dcb0d8789b3d",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721.sol/ERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1683932367481,
      "contentHash": "486433785a00d0c478fb5025633ad7ae",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC721.sol/IERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1683932367481,
      "contentHash": "c22d4395e33763de693fd440c6fd10e1",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC721Receiver.sol/IERC721Receiver.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1683932367483,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC721Metadata.sol/IERC721Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol": {
      "lastModificationDate": 1683932367484,
      "contentHash": "1a5a9c45b38ce14ebc4951ba8429d879",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC2981": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC2981.sol/ERC2981.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1683932367485,
      "contentHash": "786471b07d35318e4ad4d25d6b1fd3b0",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1683932367485,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1683932367486,
      "contentHash": "2f6e4b113762028699e08ee1b6093f0c",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Strings.sol/Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
      "lastModificationDate": 1683932367486,
      "contentHash": "c4dba5602511ca74161a10c960776289",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MerkleProof": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "MerkleProof.sol/MerkleProof.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1683932367487,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC165.sol/ERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1683932367488,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1683932367488,
      "contentHash": "f710d5d7f7d168a6a3b5698bcb093dcf",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1683932367489,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "src/Size.sol": {
      "lastModificationDate": 1684176791548,
      "contentHash": "a1c19aefe88c95ad2fa3ed0fb86d321f",
      "sourceName": "src/Size.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol",
        "src/templates/cloneable/adventure-erc721c/airdrop/basic-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/airdrop/immutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/airdrop/mutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/airdrop/shared-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol",
        "src/templates/cloneable/erc721c/airdrop/basic-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/airdrop/immutable-minter-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/airdrop/mutable-minter-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/airdrop/shared-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/merkle/basic-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/merkle/immutable-minter-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/merkle/mutable-minter-royalties/FreeNFT.sol",
        "src/templates/cloneable/erc721c/merkle/shared-royalties/FreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol",
        "src/templates/constructable/adventure-erc721c/airdrop/basic-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/airdrop/immutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/airdrop/mutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/airdrop/shared-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol",
        "src/templates/constructable/erc721c/airdrop/basic-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/airdrop/immutable-minter-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/airdrop/mutable-minter-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/airdrop/shared-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/merkle/basic-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/merkle/immutable-minter-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/merkle/mutable-minter-royalties/FreeNFT.sol",
        "src/templates/constructable/erc721c/merkle/shared-royalties/FreeNFT.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "Size_Cloneable_AdventureFreeNFT_Airdrop_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Airdrop_BasicRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Airdrop_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Airdrop_ImmutableMinterRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Airdrop_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Airdrop_MutableMinterRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Airdrop_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Airdrop_SharedRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Merkle_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Merkle_BasicRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Merkle_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Merkle_ImmutableMinterRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Merkle_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Merkle_MutableMinterRoyalties.json"
        },
        "Size_Cloneable_AdventureFreeNFT_Merkle_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_AdventureFreeNFT_Merkle_SharedRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Airdrop_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Airdrop_BasicRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Airdrop_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Airdrop_ImmutableMinterRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Airdrop_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Airdrop_MutableMinterRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Airdrop_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Airdrop_SharedRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Merkle_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Merkle_BasicRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Merkle_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Merkle_ImmutableMinterRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Merkle_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Merkle_MutableMinterRoyalties.json"
        },
        "Size_Cloneable_FreeNFT_Merkle_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Cloneable_FreeNFT_Merkle_SharedRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Airdrop_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Airdrop_BasicRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Airdrop_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Airdrop_ImmutableMinterRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Airdrop_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Airdrop_MutableMinterRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Airdrop_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Airdrop_SharedRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Merkle_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Merkle_BasicRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Merkle_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Merkle_ImmutableMinterRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Merkle_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Merkle_MutableMinterRoyalties.json"
        },
        "Size_Constructable_AdventureFreeNFT_Merkle_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_AdventureFreeNFT_Merkle_SharedRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Airdrop_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Airdrop_BasicRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Airdrop_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Airdrop_ImmutableMinterRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Airdrop_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Airdrop_MutableMinterRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Airdrop_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Airdrop_SharedRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Merkle_BasicRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Merkle_BasicRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Merkle_ImmutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Merkle_ImmutableMinterRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Merkle_MutableMinterRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Merkle_MutableMinterRoyalties.json"
        },
        "Size_Constructable_FreeNFT_Merkle_SharedRoyalties": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "Size.sol/Size_Constructable_FreeNFT_Merkle_SharedRoyalties.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol": {
      "lastModificationDate": 1683932836323,
      "contentHash": "25b18af2d894c72aa9cf1068c69ecbcd",
      "sourceName": "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureERC721CMetadataInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721CMetadataInitializable.sol/AdventureERC721CMetadataInitializable.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/airdrop/basic-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036275,
      "contentHash": "3a167fa80c33b6d2975f8428396f1523",
      "sourceName": "src/templates/cloneable/adventure-erc721c/airdrop/basic-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "basic-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/airdrop/immutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036276,
      "contentHash": "190a05ababc0de97a6bedadd8eb1d881",
      "sourceName": "src/templates/cloneable/adventure-erc721c/airdrop/immutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "immutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/airdrop/mutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683935885369,
      "contentHash": "3a08e552c008f90686f29f58ca01fb74",
      "sourceName": "src/templates/cloneable/adventure-erc721c/airdrop/mutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "mutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/airdrop/shared-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036276,
      "contentHash": "6419bb171a44f21dc172b2485edf7f0c",
      "sourceName": "src/templates/cloneable/adventure-erc721c/airdrop/shared-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "shared-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036277,
      "contentHash": "54168c21ec9bc9777c2e7b6dca280b15",
      "sourceName": "src/templates/cloneable/adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/basic-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036277,
      "contentHash": "9546398a63b5879299802c277c56963a",
      "sourceName": "src/templates/cloneable/adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/immutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036278,
      "contentHash": "f55aea0333b86735bec24977a372c869",
      "sourceName": "src/templates/cloneable/adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/mutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036278,
      "contentHash": "6f95780ced3c85a4df7d6fb2db2190c5",
      "sourceName": "src/templates/cloneable/adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/adventure-erc721c/AdventureERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/shared-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol": {
      "lastModificationDate": 1683936036279,
      "contentHash": "d772af31cc94260747c9533e77a1fa89",
      "sourceName": "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "ERC721CMetadataInitializable": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721CMetadataInitializable.sol/ERC721CMetadataInitializable.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/airdrop/basic-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036279,
      "contentHash": "1298024d9bd383dd3b0fe1f1bbe49cc4",
      "sourceName": "src/templates/cloneable/erc721c/airdrop/basic-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "basic-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/airdrop/immutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036279,
      "contentHash": "ba02b0684520bf0da8a3834e8b4348dc",
      "sourceName": "src/templates/cloneable/erc721c/airdrop/immutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "immutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/airdrop/mutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036279,
      "contentHash": "ee548745806581eb355ce9012fab240f",
      "sourceName": "src/templates/cloneable/erc721c/airdrop/mutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "mutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/airdrop/shared-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036280,
      "contentHash": "88004a17432d6404d6678445e2f6d76c",
      "sourceName": "src/templates/cloneable/erc721c/airdrop/shared-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "shared-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/merkle/basic-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036280,
      "contentHash": "2006c356d8e8137ceaeeb059877ebb24",
      "sourceName": "src/templates/cloneable/erc721c/merkle/basic-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/basic-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/merkle/immutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036280,
      "contentHash": "fde8ea40a1126b4d5cfce3db52141867",
      "sourceName": "src/templates/cloneable/erc721c/merkle/immutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/immutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/merkle/mutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036280,
      "contentHash": "04974af45c11e2bc435e6a8b9b81c885",
      "sourceName": "src/templates/cloneable/erc721c/merkle/mutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/mutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/cloneable/erc721c/merkle/shared-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036281,
      "contentHash": "569329f6a71200bbd397343d50bbfd3b",
      "sourceName": "src/templates/cloneable/erc721c/merkle/shared-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableInitializable.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/cloneable/erc721c/ERC721CMetadataInitializable.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "merkle/shared-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol": {
      "lastModificationDate": 1683936036281,
      "contentHash": "805b87e183b32c085d7be415a771c5a9",
      "sourceName": "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureERC721CMetadata": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "AdventureERC721CMetadata.sol/AdventureERC721CMetadata.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/airdrop/basic-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036282,
      "contentHash": "6b9ff39b9935f56714e80de4d818d1ed",
      "sourceName": "src/templates/constructable/adventure-erc721c/airdrop/basic-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/basic-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/airdrop/immutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036282,
      "contentHash": "2edb75a5167a2a634d2fd78ee01bd25e",
      "sourceName": "src/templates/constructable/adventure-erc721c/airdrop/immutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/immutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/airdrop/mutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036282,
      "contentHash": "de52164a07400ca732f0b02261129fea",
      "sourceName": "src/templates/constructable/adventure-erc721c/airdrop/mutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/mutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/airdrop/shared-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1684172656177,
      "contentHash": "6a8aabae2bcf31f639a82e6a679b8713",
      "sourceName": "src/templates/constructable/adventure-erc721c/airdrop/shared-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/shared-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036283,
      "contentHash": "eaa859506e2cfc06d2a4bf2852560c9a",
      "sourceName": "src/templates/constructable/adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "adventure-erc721c/merkle/basic-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036284,
      "contentHash": "7ae4af4071b01b6028b2c868c72a17ac",
      "sourceName": "src/templates/constructable/adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "adventure-erc721c/merkle/immutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1683936036284,
      "contentHash": "eb9aecde2e66a2219eb4da2f23501369",
      "sourceName": "src/templates/constructable/adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "adventure-erc721c/merkle/mutable-minter-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol": {
      "lastModificationDate": 1684172862514,
      "contentHash": "732604a7cfc16e031c17ac5d36796318",
      "sourceName": "src/templates/constructable/adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureERC721.sol",
        "lib/creator-token-contracts/contracts/adventures/AdventureWhitelist.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventure.sol",
        "lib/creator-token-contracts/contracts/adventures/IAdventurous.sol",
        "lib/creator-token-contracts/contracts/adventures/Quest.sol",
        "lib/creator-token-contracts/contracts/erc721c/AdventureERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/adventure-erc721c/AdventureERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "AdventureFreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "adventure-erc721c/merkle/shared-royalties/AdventureFreeNFT.sol/AdventureFreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/ERC721CMetadata.sol": {
      "lastModificationDate": 1683936036285,
      "contentHash": "38433c9b585e5b00dc62dbd1ade8ae90",
      "sourceName": "src/templates/constructable/erc721c/ERC721CMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "ERC721CMetadata": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "ERC721CMetadata.sol/ERC721CMetadata.json"
        }
      }
    },
    "src/templates/constructable/erc721c/airdrop/basic-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036285,
      "contentHash": "39e8fd362f482d4ecbac70f1851d60e1",
      "sourceName": "src/templates/constructable/erc721c/airdrop/basic-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/basic-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/airdrop/immutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036285,
      "contentHash": "dc29b3b343f58901a830618225a23161",
      "sourceName": "src/templates/constructable/erc721c/airdrop/immutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/immutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/airdrop/mutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036286,
      "contentHash": "41a4318b36d67d0f7dd3d91d0e1500e8",
      "sourceName": "src/templates/constructable/erc721c/airdrop/mutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/mutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/airdrop/shared-royalties/FreeNFT.sol": {
      "lastModificationDate": 1684172613452,
      "contentHash": "4da712a2b52b1f62b982ace524ccb587",
      "sourceName": "src/templates/constructable/erc721c/airdrop/shared-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/AirdropMint.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "airdrop/shared-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/merkle/basic-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036286,
      "contentHash": "abd1080459faeec6afd9c9ab9022ac26",
      "sourceName": "src/templates/constructable/erc721c/merkle/basic-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "erc721c/merkle/basic-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/merkle/immutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036287,
      "contentHash": "1221620a05e16b783ea81e5ad4da5607",
      "sourceName": "src/templates/constructable/erc721c/merkle/immutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/ImmutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "erc721c/merkle/immutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/merkle/mutable-minter-royalties/FreeNFT.sol": {
      "lastModificationDate": 1683936036287,
      "contentHash": "0414e704c02b2346761b0094b3ff353f",
      "sourceName": "src/templates/constructable/erc721c/merkle/mutable-minter-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MutableMinterRoyalties.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "erc721c/merkle/mutable-minter-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    },
    "src/templates/constructable/erc721c/merkle/shared-royalties/FreeNFT.sol": {
      "lastModificationDate": 1684172932138,
      "contentHash": "9199df4ce2ff338d440219d5d84de67c",
      "sourceName": "src/templates/constructable/erc721c/merkle/shared-royalties/FreeNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/creator-token-contracts/contracts/access/OwnableBasic.sol",
        "lib/creator-token-contracts/contracts/access/OwnablePermissions.sol",
        "lib/creator-token-contracts/contracts/erc721c/ERC721C.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorToken.sol",
        "lib/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol",
        "lib/creator-token-contracts/contracts/interfaces/IEOARegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol",
        "lib/creator-token-contracts/contracts/interfaces/ITransferValidator.sol",
        "lib/creator-token-contracts/contracts/minting/ClaimPeriodBase.sol",
        "lib/creator-token-contracts/contracts/minting/MaxSupply.sol",
        "lib/creator-token-contracts/contracts/minting/MerkleWhitelistMint.sol",
        "lib/creator-token-contracts/contracts/minting/MintTokenBase.sol",
        "lib/creator-token-contracts/contracts/minting/SequentialMintBase.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/MinterCreatorSharedRoyalties.sol",
        "lib/creator-token-contracts/contracts/programmable-royalties/helpers/IPaymentSplitterInitializable.sol",
        "lib/creator-token-contracts/contracts/token/erc721/ERC721OpenZeppelin.sol",
        "lib/creator-token-contracts/contracts/token/erc721/MetadataURI.sol",
        "lib/creator-token-contracts/contracts/utils/CreatorTokenBase.sol",
        "lib/creator-token-contracts/contracts/utils/TransferPolicy.sol",
        "lib/creator-token-contracts/contracts/utils/TransferValidation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/templates/constructable/erc721c/ERC721CMetadata.sol"
      ],
      "versionRequirement": "=0.8.9",
      "artifacts": {
        "FreeNFT": {
          "0.8.9+commit.e5eed63a.Darwin.appleclang": "erc721c/merkle/shared-royalties/FreeNFT.sol/FreeNFT.json"
        }
      }
    }
  }
}